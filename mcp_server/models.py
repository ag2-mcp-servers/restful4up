# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T08:57:16+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class MatchedYaraRule(BaseModel):
    rule: str = Field(..., description='matched rule')
    string_information: List[str] = Field(
        ..., description='string which matched during the scanning'
    )


class ApplyYaraRule(BaseModel):
    error_message: Optional[str] = Field(
        None, description='error message, if YARA failed'
    )
    is_success: bool = Field(..., description='is operation success')
    matched_yara_rules: Optional[List[List[MatchedYaraRule]]] = Field(
        None, description='matched YARA rules'
    )
    yara_command: str = Field(..., description='Yara command executed')


class Error(BaseModel):
    message: str
    status: int


class Meta(BaseModel):
    date: str = Field(..., description='Date of the YARA rule created')
    md5sum: str = Field(..., description='MD5 check sum')
    sha256sum: str = Field(..., description='SHA 256 check sum')
    sha512sum: str = Field(..., description='SHA 512 check sum')


class Yara(BaseModel):
    meta: Meta = Field(..., description='Yara rule meta data section')
    name: str = Field(..., description='Yara rule name')
    strings: List[List[str]] = Field(..., description='Yara rule string section')


class IsUnpackingRequired(Enum):
    true = 'true'
    false = 'false'


class ApplyYaraRulesPostRequest(BaseModel):
    file: bytes = Field(..., description='file')
    is_unpacking_required: Optional[IsUnpackingRequired] = None
    rules: List[str] = Field(..., max_length=10, min_length=1)


class ApplyYaraRulesPostResponse(BaseModel):
    result: Optional[ApplyYaraRule] = None


class EmulationOutputPostRequest(BaseModel):
    file: bytes = Field(..., description='file')


class EmulationOutputPostResponse(BaseModel):
    output: List[str]


class GeneratePartialYaraRulesPostRequest(BaseModel):
    file: bytes = Field(..., description='file')
    is_unpacking_required: Optional[IsUnpackingRequired] = None
    minimum_string_length: Optional[str] = None
    strings_to_ignore: Optional[List[str]] = Field(None, max_length=1000, min_length=0)


class GeneratePartialYaraRulesPostResponse(BaseModel):
    rule: Optional[Yara] = None


class UnpackPostRequest(BaseModel):
    file: bytes = Field(..., description='file')
